<template>
	<view class="content">
		<map id="map1" ref="map1" class="map" :style="{height:mapHeight}" :scale="scale" :longitude="longitude" :latitude="latitude"
		 :polyline="polyline" :markers="markers" :show-location="true">
			
		</map>
		<view class="info">
			<text class="title">{{info.startStaion}} - {{info.endStation}}</text>
			<view style="margin-top: 10rpx;">
				<text class="text">{{utils.timeTodate('Y-m-d H:i',info.setTime)}}出发</text>
				<text class="text">上车点：{{info.startStaion}}</text>
				<text class="text">下车点：{{info.endStation}}</text>
			</view>
		</view>
	</view>
</template>

<script>
	import $taxi from '../../../../common/Czc.js';
	import utils from "@/components/CTKY/shoyu-date/utils.filter.js";
	export default {
		data() {
			return {
				utils: utils,
				info: [],
				mapHeight: '', //地图高度
				longitude: "", //地图中心点经度
				latitude: "", //地图中心点纬度
				scale: 12, //地图缩放比例
				markers: [{
						id: 0,
						latitude: '24.8906763700',
						longitude: '118.5991555300',
						iconPath: '../../../../static/CTKY/Start.png',
						callout: { //自定义标记点上方的气泡窗口 点击有效
							content: '丰泽区', //文本
							color: '#FC4646', //文字颜色
							fontSize: 10, //文本大小
							borderRadius: 2, //边框圆角
							bgColor: '#FFFFFF', //背景颜色
							display: 'ALWAYS', //常显
							padding: 1,
						},
					},
					{
						id: 0,
						latitude: '24.9102214500',
						longitude: '118.6143540000',
						iconPath: '../../../../static/CTKY/end.png',
						callout: { //自定义标记点上方的气泡窗口 点击有效
							content: '丰泽区', //文本
							color: '#FC4646', //文字颜色
							fontSize: 10, //文本大小
							borderRadius: 2, //边框圆角
							bgColor: '#FFFFFF', //背景颜色
							display: 'ALWAYS', //常显
							padding: 1,
						},
					},
				], //标记点
				polyline: [{
					points: [],
					color: "#669253",
					width: 2,
					arrowLine: true,
				}], //规划的线
				showLlocation: true, //是否显示当前位置
				startArray:[],
				endArray:[],
			}
		},
		onLoad(param) {
			var that = this;
			uni.getSystemInfo({
				//设置地图高度为可使用的高度
				success: function(res) {
					that.mapHeight = res.windowHeight + 'px';
				}
			});
			//获取自身位置
			that.getMyLocation();
			
			that.info = JSON.parse(param.traditionArray)
			
			that.startArray = that.info.starSiteArr[0]
			that.endArray = that.info.endSiteArr[0]
			var startLonLat = that.startArray.Longitude + ',' + that.startArray.Latitude
			var endLonLat = that.endArray.Longitude + ',' + that.endArray.Latitude
			that.getDirectionDriving(startLonLat,endLonLat);
		},
		methods: {
			//--------------------------------------获取自身位置--------------------------------------
			getMyLocation: function() {
				var that = this;
				uni.getLocation({
					type: "gcj02",
					geocode: true,
					success: function(res) {
						//获取当前位置成功之后，给当前位置的经纬度赋值
						if (that.longitude == "" && that.latitude == "") {
							that.longitude = res.longitude;
							that.latitude = res.latitude;
						}
					}
				})
			},
			//--------------------------------------规划路线--------------------------------------
			//传进经纬度，规划路线
			getDirectionDriving: function(startLonLat, endLonLat) {
				//调用高德api取得路径规划并绘制线路
				let that = this;
				uni.request({
					url: $taxi.InterfaceAddress[0],
					data: {
						startLonLat: startLonLat,
						endLonLat: endLonLat,
					},
					method: "GET",
					success: function(res) {
						// console.log(startLonLat,endLonLat)
						//日后会加入定时，此处需清空
						that.points = [];
						that.polyline = [];
						that.distance = (res.data.Distance / 1000).toFixed(1);
						that.duration = (res.data.Duration / 60).toFixed(0);
						var polylineArr = [];
						var points = [];
			
						polylineArr = res.data.Polyline;
			
						for (var i = 0; i < polylineArr.length; i++) {
							var arr = polylineArr[i].split(';');
							for (var j = 0; j < arr.length; j++) {
								points.push(arr[j]);
							}
						}
						//根据文件建设对象经纬度数组
						for (var i = 0; i < points.length; i++) {
							var arr = points[i].split(',');
							var obj = {
								longitude: arr[0],
								latitude: arr[1]
							}
							that.points.push(obj);
						}
						var obj = {
							points: that.points,
							color: "#4bdc27",
							arrowLine: true,
							width: 6
						};
						that.polyline.push(obj);
					},
					fail: function(res) {
						console.log(res);
					}
				});
			}
		}
	}
</script>

<style>
	.content {
		width: 750rpx;
		/* height: 100%; */
		background-color: #FFFFFF;
	}

	.map {
		width: 750rpx;
	}

	.info {
		background-color: #FFFFFF;
		position: fixed;
		border-radius: 20rpx;
		left: 20rpx;
		right: 20rpx;
		bottom: 20rpx;
	}
	/* 起始站 */
	.title {
		margin-top: 20rpx;
		margin-left: 20rpx;
		font-size: 30rpx;
		color: rgba(44,45,45,1);
	}
	/* 时间/上下车点 */
	.text {
		margin-top: 5rpx;
		margin-left: 20rpx;
		font-size: 26rpx;
		color: rgba(102, 102, 102, 1);
		margin-bottom: 20rpx;
		font-weight: 300;
	}
</style>
