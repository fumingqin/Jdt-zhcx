<template>
	<view class="content">
		<map id="map" ref='map' class="map" :style="{height:mapHeight}" :latitude="centerLatitude" :longitude="centerLongitude"
		 :markers="markers" :show-location="showLocation" :scale="scale" :polyline="polyline" :controls="controls"
		 @regionchange='mapChange' @markertap='markertap'>
			<cover-image src="../../../static/Home/icon_position.png" class="icon-img" :style="{bottom:Height}"></cover-image>
		</map>

		<!-- 自定义导航栏 -->
		<view class="navgator">
			<view style="width: 60rpx;height: 50rpx;margin-left: 40rpx;" @click="NavBack">
				<image src="../../static/GRZY/back.png" style="width: 20rpx;height: 35rpx;"></image>
			</view>

			<view class="navTitleView">
				<view>
					<text style="color: #65C36D;" @click="titleClick('无桩')" :class="{'Btn_click' : isClick == '无桩'}">无桩</text>
				</view>
				<view style="margin-left: 30rpx;">
					<text style="color: #333333;" @click="titleClick('有桩')" :class="{'Btn_click' : isClick == '有桩'}">有桩</text>
				</view>
			</view>

			<!-- 布局需要，不要删 -->
			<view style="width: 60rpx;">

			</view>
		</view>

		<!-- 搜索框 -->
		<view class="topSerchView">
			<view class="SearchBar" elevation='5px'>
				<!-- <uni-search-bar class="SearchBar" radius="5" placeholder="请输入关键字搜索" clearButton="always" cancelButton="always" @confirm="onInput" /> -->
				<input class="addressInput" :value="inputValue" clearButton="always" @input="onInput" placeholder="请输入关键字搜索" @blur="blur" />
				<text style="margin-right: 20rpx;font-size: 32rpx;color: #999999;" @click="searClick">取消</text>
			</view>
			<!-- 搜索列表 -->
			<scroll-view class="stationList" :style="{ 'height':scrollHeight }" v-if="isShowList" scroll-y="true">
				<block v-for="(item,index) in keywordList" :key="index">
					<view class="listItem">
						<jyf-parser :html="item.htmlStr" show-with-animation="true" @click="itemClick(item,index)"></jyf-parser>
					</view>
				</block>
			</scroll-view>
		</view>


		<!-- 回到自身定位按钮 -->
		<image src="../../static/GRZY/Position.png" class="dingwei" @click="backToMyLocation"></image>
		<!-- 扫码开锁按钮 -->
		<button class="unLock" @click="unLockClick" :disabled="disabled">
			<view class="unLockView">
				<image class="scan" src="../../static/GRZY/scan.png"></image>
				<view style="margin-left: 20rpx;">
					<text style="color: #FFFFFF;">扫码开锁</text>
				</view>
			</view>
		</button>
		<!-- 个人主页 -->
		<image src="../../static/GRZY/personal.png" class="personal" @click="personalClick"></image>
		<!-- 计费规则 -->
		<view class="rule" @click="BillingRule">
			<text class="circleText">计费</text>
			<text class="circleText">规则</text>
		</view>
		<!-- 故障上报 -->
		<view class="rule" style="bottom: 255rpx;" @click="breakdownClick">
			<text class="circleText">故障</text>
			<text class="circleText">上报</text>
		</view>
		
		<view class="busClass" @click="busClick">
			<text class="circleText">公交</text>
		</view>
	</view>
</template>

<script>
	import jyfParser from "../../components/jyf-parser/jyf-parser.vue"
	import uniSearchBar from "../../components/searchBar/uni-search-bar/uni-search-bar.vue"
	import $DDTInterface from '@/common/DDT.js'
	export default {
		components: {
			jyfParser,
			uniSearchBar
		},
		data() {
			return {
				inputValue: '', //搜索框内容
				userInfo: [], //用户信息
				mapHeight: '', //地图高度
				Height: '',
				centerLatitude: "24.517346", //地图中心点纬度
				centerLongitude: "117.6536981221", //地图中心点经度
				markers: [], //标记点坐标数组
				showLocation: true,
				scale: 18, //地图缩放比例,值越小地图可视范围越大
				polyline: [], //画线数组
				mapContext: '',
				isClick: '无桩', //是否点击
				markerIconPath: '../../static/RentBike/power.png',
				bicycleIconPath: '../../static/RentBike/bicycleGreen.png',
				//标识宽高
				iconWidth: 50,
				iconHeight: 50,
				appMap: '',
				position: [],
				system: '',
				disabled: true, //判断扫码按钮是否可以点击
				currentLatitude: '', //有桩开启定位时显示的位置--纬度
				currentLongitude: '', //有桩开启定位时显示的位置--经度
				isLocation: false, //判断当前是否开启定位--默认是不开启
				markLonLatArray: [], //标记点坐标数组
				scrollHeight: '300px', //搜索列表高度
				isShowList: false, //是否显示站点列表
				keywordList: [], //标记点列表
			}
		},
		onLoad() {
			var that = this;
			that.userInfo = uni.getStorageSync('userInfo') || '';
			//获取系统信息
			uni.getSystemInfo({
				success: function(res) {
					//地图高度
					if (res.platform == 'ios') {
						//当前是iOS系统
						that.system = 'iOS'
					} else {
						//当前是Android系统
						that.system = 'Android'
					}
					// console.log(that.system)
					that.mapHeight = res.windowHeight + 'px';
					that.Height = res.windowHeight / 2 - 4 + 'px';
				}
			});
			// 获取自身位置
			that.getMyLocation();

			//无桩：默认设置定位在古雷
			that.GetBHTStationByRange(117.63370822482639, 23.93265109592014);

			//检测当前是否有订单未完成
			that.checkCurrentStatus();


		},
		onShow() {
			var that = this;
			//恢复扫码按钮点击
			that.disabled = true;
			that.getUserInfo();
			setTimeout(function() {
				let query = uni.createSelectorQuery().in(that).select("#map");
				query.fields({
					size: true,
					scrollOffset: true
				}, data => {
					// console.log(data);
				}).exec();
			}, 200)
		},
		onReady() {
			var that = this;
			//mapContext 通过 mapId 跟一个 <map> 组件绑定，通过它可以操作对应的 <map> 组件
			that.mapContext = uni.createMapContext("map", this);
		},
		methods: {
			//计费规则
			BillingRule: function() {
				uni.navigateTo({
					url: "./BillingRule"
				})
			},
			//故障上报
			breakdownClick:function(){
				uni.navigateTo({
					url: "../BreakdownUpload/uploadBreakdown",
					animationType:'fade-in',
					animationDuration:1000
				})
			},
			
			//点击公交
			busClick: function() {
				uni.redirectTo({
					url: "./BusLocationMark"
				})

			},
			//--------------------------读取用户信息--------------------------
			getUserInfo() {
				var that = this;
				//读取用户ID
				uni.getStorage({
					key: 'userInfo',
					success: function(data) {
						console.log('用户数据', data)
						that.userInfo = data.data;
					},
					fail(data) {}
				})
			},
			//-------------------------监听输入开始-------------------------
			onInput(event) {
				var that = this;
				var keyword = event.detail ? event.detail.value : event;
				that.inputValue = event.detail ? event.detail.value : event;
				if (keyword == "") {
					that.keywordList = [];
					that.isShowList = false;
				} else {
					that.isShowList = true;
					//如果在这里直接搜索的话会有一个问题：每打一个字都会触发一次搜索接口，每删一个字也会触发
					//如果删除太快就会出现输入框里已经没有内容，但是还是会触发搜索，因为在删到剩下一个字的时候还是会调搜索接口
					that.GetStationByKeys(keyword);
				}
			},
			blur: function() {
				// console.log('失去焦点了')
				var that = this;
				// if(that.isShowList == true){
				// 	that.isShowList = false
				// }
			},
			//-------------------------点击搜索时重新搜索关键字-------------------------
			searClick: function() {
				var that = this;
				if (that.isShowList == true) {
					that.isShowList = false
				}
				if (that.inputValue) {
					that.keywordList = [];

					that.inputValue = '';
					// that.GetStationByKeys(that.inputValue);
				}
			},
			//-------------------------根据关键字查询-------------------------
			GetStationByKeys: function(keyword) {
				var that = this;
				uni.showLoading({
					title: '正在加载...'
				})
				var Url = '';
				if (that.isClick == '有桩') {
					Url = $DDTInterface.DDTInterface.GetStationByKeys.Url
				} else {
					Url = $DDTInterface.DDTInterface.GetBHTStation.Url
				}
				uni.request({
					url: Url,
					method: $DDTInterface.DDTInterface.GetStationByKeys.method,
					data: {
						Keys: keyword
					},
					success(res) {
						uni.hideLoading()
						console.log('获取模糊查询成功', res)
						if (res.data.status == true) {
							if (res.data.data != "") {
								that.keywordList = that.drawCorrelativeKeyword(res.data.data, keyword);
							} else {
								uni.showToast({
									title: '查无站点',
									icon: 'none'
								})
							}
						} else {
							that.isShowList = false;
							uni.showToast({
								title: '查无站点',
								icon: 'none'
							})
						}
					},
					fail(res) {
						uni.hideLoading()
						console.log('获取模糊查询失败', res)
					}
				})
			},
			//-------------------------高亮关键字-------------------------
			drawCorrelativeKeyword(keywords, keyword) {
				// console.log(keywords);
				var that = this;
				var len = keywords.length,
					keywordArr = [];
					var arr=[];
				for (var i = 0; i < len; i++) {
					if (that.isClick == '有桩') {
						var row = keywords[i].name;
					} else {
						var row = keywords[i].StationName;
					}
					//定义高亮#9f9f9f
					var html = row.replace(keyword, "<span style='color: #9f9f9f;'>" + keyword + "</span>");
					html = '<div>' + html + '</div>';
					var tmpObj = {
						keyword: row,
						htmlStr: html,
						data: keywords
					}; 
					arr.push(tmpObj)
				}
				keywordArr=arr;
				// console.log(keywordArr)
				return keywordArr;
			},
			//-------------------------点击下拉站点-------------------------
			itemClick: function(item, index) {
				var that = this;
				// console.log('123456',item)
				that.inputValue = item.keyword;
				//点击站点时将对应的站点坐标设置为地图中心位置，并放大地图
				if (that.isClick == '有桩') {
					var gpsArray = item.data[index].gps.split(',')
					console.log(gpsArray)
					that.centerLatitude = gpsArray[0];
					that.centerLongitude = gpsArray[1];
				} else {
					that.centerLatitude = item.data[index].Latitude;
					that.centerLongitude = item.data[index].Longitude;
				}
				// that.scale = 15;
				that.isShowList = false;
			},
			//-------------------------监听输入结束-------------------------
			//-------------------------------获取自身位置-------------------------------
			getMyLocation: function() {
				var that = this;
				uni.getLocation({
					//type默认为wgs84返回gps坐标,gcj02返回国测局坐标,可用于uni.openLocation的坐标
					type: "gcj02",
					//是否解析地址信息，默认false
					geocode: true,
					success: function(res) {
						//若当前位置在古雷---默认显示无桩数据
						if (res.address.district.indexOf('漳浦县') == 0) {
							that.isClick = '无桩';
							that.GetBHTStationByRange(117.633708, 23.932651);
						} else {
							//当前位置不在古雷--就显示有桩数据
							that.isClick = '有桩';
							that.GetStationByRange(res.longitude, res.latitude);
						}
						//如果地图中心位置坐标为空，将当前位置坐标设置为地图中心坐标
						// that.centerLongitude = res.longitude;
						// that.centerLatitude = res.latitude;
						that.isLocation = true;
						that.currentLongitude = res.longitude; //有桩开启定位时显示的位置--纬度
						that.currentLatitude = res.latitude; //有桩开启定位时显示的位置--经度
					},
					fail(res) {
						that.isLocation = false;
						uni.showModal({
							title: '温馨提示',
							content: '获取位置失败，请打开定位',
							showCancel: false
						})
					}
				});
			},
			//-------------------------------获取地图中心坐标信息-------------------------------
			mapChange: function(e) {
				var that = this;
				if (e.type == 'regionchange' || e.type == 'end') {
					that.mapContext = uni.createMapContext('map')
					that.mapContext.getCenterLocation({
						success: res => {
							// console.log(res.longitude+','+res.latitude)
							if (that.isClick == '有桩') {
								//当地图移动的时候，改变坐标显示周围的车辆位置信息
								that.GetStationByRange(res.longitude, res.latitude)
							} else if (that.isClick == '无桩') {
								//当地图移动的时候，改变坐标显示周围的车辆位置信息
								that.GetBHTStationByRange(res.longitude, res.latitude)
							}
						}
					})
				}
			},
			//-------------------------------进到页面的时候检测当前是否有订单未完成-------------------------------
			checkCurrentStatus: function() {
				var that = this;
				uni.request({
					url: $DDTInterface.DDTInterface.GetBizStatus.Url,
					method: $DDTInterface.DDTInterface.GetBizStatus.method,
					data: {
						loginname: that.userInfo.phoneNumber, //手机号
					},
					success(response) {
						uni.hideLoading()
						if (response.data.status == true) {
							if (response.data.data.bizStatus == '已租车') {
								//当前有未完成订单,跳转到行程页面
								uni.showModal({
									title: '温馨提示',
									content: '当前有未完成订单，是否前往？',
									success(res) {
										if (res.confirm) {
											uni.navigateTo({
												url: './Riding'
											})
										}
									}
								})
							} else if (response.data.data.bizStatus == '租车超时支付中') {
								//租车超时支付中，跳转到支付页面
								that.myShowModal('租车超时支付中，请完成支付');
							}
						} else {
							console.log('返回数据false', response)
						}
					},
					fail(response) {
						console.log(response)
					}
				})
			},
			//-------------------------------有桩数据-------------------------------
			GetStationByRange: function(longitude, latitude) {
				var that = this;
				that.centerLongitude = longitude;
				that.centerLatitude = latitude;
				uni.showLoading({
					title: '加载中...',
					mask: true
				})
				uni.request({
					url: $DDTInterface.DDTInterface.GetStationByRange.Url,
					method: $DDTInterface.DDTInterface.GetStationByRange.method,
					data: {
						Longitude: longitude, //经度
						Latitude: latitude, //纬度
						Range: 500, //范围（米）
					},
					success(res) {
						uni.hideLoading()
						if (res.data.status == true) {
							//将获取到的标记点坐标存起来
							that.markLonLatArray = res.data.data;
							//请求数据成功之后先清空之前的数据
							that.markers = [];
							for (var i = 0; i < res.data.data.length; i++) {
								if (res.data.data[i].status == 7) { //正常
									that.bicycleIconPath = '../../static/RentBike/bicycleGreen.png'
								} else if (res.data.data[i].status == 9) { //离线
									that.bicycleIconPath = '../../static/RentBike/bicycleOutline.png'
								}
								//---------------------华丽的分割线，分割线中为绘制坐标点的方法---------------------------
								//创建绘制坐标点的对象marker
								var marker = new Object();
								//坐标里面包含经纬度，需要将经纬度分离取出来
								var gps = res.data.data[i].gps.split(',');
								//冒泡显示文本 ---  可租数量，可还数量，可用时长
								var content = res.data.data[i].name + '\n' + '可用：' + res.data.data[i].rentCount + '  ' + '可还：' + res.data.data[
									i].restoreCount;
								marker = {
									id: res.data.data[i].id,
									latitude: gps[1],
									longitude: gps[0],
									iconPath: that.bicycleIconPath, //标识显示的图片
									width: that.iconWidth,
									height: that.iconHeight,
									callout: {
										content: content, //文本res.data.data[i].name
										color: '#65C36D', //文字颜色
										fontSize: 14, //文本大小
										borderRadius: 6, //边框圆角
										bgColor: '#FFFFFF', //背景颜色
										display: 'BYCLICK', //'BYCLICK':点击显示; 'ALWAYS':常显
										padding: 5,
										textAlign: 'center',
									},
								}
								var json = JSON.stringify(that.markers);
								var arr = JSON.parse(json);
								arr.push(marker);
								//当标记点加载完之后重新设置地图比例
								that.markers = arr;
								//将坐标集合添加到绘制坐标数组中
								// that.markers.push(marker);
								//---------------------华丽的分割线--------------------------------------
							}
						} else {
							console.log(res)
						}
					},
					fail(res) {
						uni.hideLoading()
						console.log(res)
					}
				})
			},
			//-------------------------------无桩数据-------------------------------
			GetBHTStationByRange: function(longitude, latitude) {
				var that = this;
				that.centerLongitude = longitude;
				that.centerLatitude = latitude;
				uni.showLoading({
					title: '加载中...',
					mask: true
				})
				uni.request({
					url: $DDTInterface.DDTInterface.GetBHTStationByRange.Url,
					method: $DDTInterface.DDTInterface.GetBHTStationByRange.method,
					data: {
						Longitude: longitude, //经度
						Latitude: latitude, //纬度
						Range: 1000, //范围（米） 
					},
					success(res) {
						uni.hideLoading()
						if (res.data.status == true) {
							//将获取到的标记点坐标存起来
							that.markLonLatArray = res.data.data;
							//请求数据成功之后先清空之前的数据
							that.markers = [];
							for (var i = 0; i < res.data.data.length; i++) {
								// let display = '';
								if (res.data.data[i].status == 7) { //正常
									that.markerIconPath = '../../static/RentBike/power.png'
								} else if (res.data.data[i].status == 9) { //离线
									that.markerIconPath = '../../static/RentBike/powerOutline.png'
								}
								//---------------------华丽的分割线，分割线中为绘制坐标点的方法---------------------------
								//创建绘制坐标点的对象marker
								var marker = new Object();
								//坐标里面包含经纬度，需要将经纬度分离取出来
								var gps = res.data.data[i].gps.split(',');
								//冒泡显示文本 ---  可租数量，可还数量，可用时长
								// var content = '可租数量：' + res.data.data[i].rentCount + ' ' + '可还数量：' + res.data.data[i].restoreCount;
								marker = {
									id: res.data.data[i].id,
									latitude: gps[1],
									longitude: gps[0],
									iconPath: that.markerIconPath, //标识显示的图片
									width: that.iconWidth,
									height: that.iconHeight,
									callout: {
										content: res.data.data[i].name, //文本res.data.data[i].name
										color: '#65C36D', //文字颜色
										fontSize: 14, //文本大小
										borderRadius: 6, //边框圆角
										bgColor: '#FFFFFF', //背景颜色
										display: 'BYCLICK', //'BYCLICK':点击显示; 'ALWAYS':常显
										padding: 5,
									}
								}
								var json = JSON.stringify(that.markers);
								var arr = JSON.parse(json);
								arr.push(marker);
								//当标记点加载完之后重新设置地图比例
								that.markers = arr;
								//将坐标集合添加到绘制坐标数组中
								// that.markers.push(marker);
								//---------------------华丽的分割线--------------------------------------
							}
						} else {
							console.log(res)
						}
					},
					fail(res) {
						uni.hideLoading()
						console.log(res)
					}
				})
			},
			//-------------------------------返回上一个页面-------------------------------
			NavBack: function() {
				uni.switchTab({
					url: "../../../pages/Home/zy_zhcx"
				})
			},
			//-------------------------------点击标题-------------------------------
			titleClick: function(res) {
				var that = this;
				that.isShowList = false;
				that.mapContext.getScale({
					success(res) {
						console.log(res)
						that.scale = res.scale;
					}
				})
				setTimeout(function() {
					that.scale = 18
					that.isClick = res;
					if (res == '有桩') {
						//若当前开启了定位---显示自身的位置
						if (that.isLocation == true) {
							that.GetStationByRange(that.currentLongitude, that.currentLatitude);
						} else {
							//若当前未开启定位---将位置显示到市政府的位置
							that.GetStationByRange(117.647128, 24.513074); //有桩
						}
						//当前选中的是单车，加载单车的数据,经纬度传当前位置
						// that.GetStationByRange(that.centerLongitude,that.centerLatitude);
					} else if (res == '无桩') {
						//当前选中的是助力车，加载助力车的数据,经纬度传当前位置
						// that.GetBHTStationByRange(that.centerLongitude,that.centerLatitude);
						that.GetBHTStationByRange(117.633708, 23.932651);
					}
				}, 10)
			},
			//-------------------------------返回自身位置-------------------------------
			backToMyLocation: function() {
				var that = this;
				//回到我的位置：将地图中心移动到当前定位点，需要配合map组件的show-location使用
				that.mapContext.getScale({
					success(res) {
						console.log(res)
						that.scale = res.scale;
					}
				})
				setTimeout(function() {
					that.scale = 18
					that.mapContext.moveToLocation();
				}, 10)
			},
			//-------------------------------跳转个人中心-------------------------------
			personalClick: function() {
				uni.navigateTo({
					url: "../GRZY/zy_homepage"
				})
			},
			//-------------------------------扫码开锁-------------------------------
			unLockClick: function() {
				let that = this;
				//禁用按钮点击，防止用户多次点击
				that.disabled = false;
				uni.showLoading({
					title: '加载中...',
					mask: true
				})
				//扫码开锁之前先查一下是否可以租车
				that.GetBizStatus();
			},
			//-------------------------------查询业户信息-------------------------------
			GetBizStatus: function() {
				var that = this;
				uni.request({
					url: $DDTInterface.DDTInterface.GetBizStatus.Url,
					method: $DDTInterface.DDTInterface.GetBizStatus.method,
					data: {
						loginname: that.userInfo.phoneNumber, //手机号
					},
					success(response) {
						uni.hideLoading()
						if (response.data.status == true) {
							if (response.data.data.bizStatus == '新建') {
								that.myShowModal('未交押金无法用车，是否立即支付押金？', '../GRZY/zy_homepage');
							} else if (response.data.data.bizStatus == '业务开通支付中') {
								that.myShowModal('业务开通支付中');
							} else if (response.data.data.bizStatus == '已租车') {
								that.myShowModal('当前有未完成订单，是否前往', './Riding');
							} else if (response.data.data.bizStatus == '租车超时支付中') {
								that.myShowModal('租车超时支付中，请完成支付', './Payment');
							} else if (response.data.data.bizStatus == '业务已注销') {
								that.myShowModal('业务已注销，是否立即交付押金？', '../GRZY/zy_homepage');
							} else if (response.data.data.bizStatus == '可用') {
								//已交押金，开始扫码租车
								that.scanQrcode();
							} else if (response.data.data.bizStatus == null) {
								that.myShowModal('请先登陆', '../../../pages/GRZX/userLogin');
							}
						} else {
							console.log('返回数据false', response)
						}
					},
					fail(response) {
						console.log(response)
					}
				})
			},
			//-------------------------------二维码扫描-------------------------------
			scanQrcode: function() {
				var that = this;
				//扫描二维码
				uni.scanCode({
					onlyFromCamera: false,
					success: function(res) {
						// console.log(res)
						
						var powerIndex = res.result.indexOf("http://q.diiing.cn");//助力车
						var bicycleIndex = res.result.indexOf('http://download.dingdatech.com/router.html');//无桩自行车
						//若powerIndex!=-1扫的就是助力车bicycleIndex!=-1扫的就是无桩自行车
						if(powerIndex != -1 || bicycleIndex != -1){
							that.isClick == '无桩'
							//无桩请求
							that.Rent_hire(res.result);
						}else{
							that.isClick == '有桩'
							//有桩请求
							that.Rent(res.result);
						}
						
						//先判断当前扫码是有桩还是无桩
						// if (that.isClick == '有桩') {
						// 	//有桩
						// 	that.Rent(res.result);
						// } else if (that.isClick == '无桩') {
						// 	//无桩
						// 	that.Rent_hire(res.result);
						// }
					},
					fail: function(res) {
						console.log('扫描结果', res)
					}
				});
			},
			//-------------------------------便捷弹框提示-------------------------------
			myShowModal(content, Url) {
				uni.showModal({
					title: '温馨提示',
					content: content,
					success(res) {
						if (res.confirm) {
							uni.navigateTo({
								url: Url
							})
						}
					}
				})
			},
			//-------------------------------有桩租车请求-------------------------------
			Rent: function(param) {
				var that = this;
				uni.showLoading({
					title: '正在开锁...',
					mask: true
				})
				uni.request({
					url: $DDTInterface.DDTInterface.Rent.Url,
					method: $DDTInterface.DDTInterface.Rent.method,
					data: {
						phone: that.userInfo.phoneNumber, //13906963039
						QRcode: param,
						SystemType: that.system,
						userID: that.userInfo.userId,
					},
					success(response) {
						uni.hideLoading()
						console.log(response)
						if (response.data.status == true) {
							//新建、业务开通支付中、可用、租车超时支付中、 业务已注销这些状态在扫码的时候就已经判断过了这里可以不做判断
							if (response.data.data.BizStatus == '1004') {
								var responseArr = {
									bikeType: '有桩',
									OrderId: response.data.data.OrderId, //订单ID
									bikeId: response.data.data.bikeId, //车辆编号
									operationId: response.data.data.operationId, //操作编号
									phoneNumber: that.userInfo.phoneNumber, //手机号
								}
								//当前状态可以租车
								uni.navigateTo({
									url: './Riding?&responseArr=' + JSON.stringify(responseArr)
								})
							} else if (response.data.data.BizStatus == '1003') {
								uni.showToast({
									title: '请扫码正确二维码',
									icon: 'none'
								})
							}
						} else if (response.data.status == false) {
							//当前扫码的是无桩车二维码
							if (response.data.msg.indexOf('字符串的长度不能为零') == 0) {
								uni.showToast({
									title: '请扫有桩的二维码',
									icon: 'none'
								})
							} else if (response.data.msg == '您有未完成或者未支付的订单') {
								that.myShowModal('有未完成订单，是否前往支付', './Payment')
							} else {
								uni.showToast({
									title: response.data.msg,
									icon: 'none'
								})
							}
						}
					},
					fail(response) {
						uni.hideLoading()
						console.log(response)
					}
				})
			},
			//-------------------------------无桩租车请求-------------------------------
			Rent_hire: function(param) {
				var that = this;
				var bicycleType = '';
				//扫码结果中包含http://download.dingdatech.com/router.html的话扫的就是无桩自行车的码
				if(param.indexOf('http://download.dingdatech.com/router.html')!=-1){
					bicycleType = '自行车'
				}else {
					bicycleType = '无桩'
				}
				uni.showLoading({
					title: '正在开锁...',
					mask: true
				})
				uni.request({
					url: $DDTInterface.DDTInterface.Rent_hire.Url,
					method: $DDTInterface.DDTInterface.Rent_hire.method,
					data: {
						phone: that.userInfo.phoneNumber, //that.userInfo.phoneNumber
						QRcode: param,
						SystemType: that.system,
						userID: that.userInfo.userId,
					},
					success(response) {
						uni.hideLoading()
						if (response.data.status == true) {
							//新建、业务开通支付中、可用、租车超时支付中、 业务已注销这些状态在扫码的时候就已经判断过了这里可以不做判断
							if (response.data.data.ReqStatus == '4000') {
								var responseArr = {
									bikeType: '无桩',
									bicycleType:bicycleType,
									OrderId: response.data.data.OrderId, //订单ID
									bikeId: response.data.data.bikeId, //车辆编号
									operationId: response.data.data.operationId, //操作编号
									phoneNumber: that.userInfo.phoneNumber, //手机号
								}
								//当前状态可以租车
								uni.navigateTo({
									url: './Riding?&responseArr=' + JSON.stringify(responseArr)
								})
								uni.showToast({
									title: '租车成功',
								})
							} else if (response.data.data.ReqStatus == '6010') {
								uni.showToast({
									title: '电量过低，无法租车',
									icon: 'none'
								})
							} else if (response.data.data.ReqStatus == '4008') {
								uni.showToast({
									title: '设备异常',
									icon: 'none'
								})
							} else if (response.data.data.ReqStatus == '4001') {
								uni.showToast({
									title: '锁开，不可租',
									icon: 'none'
								})
							} else {
								uni.showToast({
									title: '未知错误',
									icon: 'none'
								})
							}
						} else if (response.data.status == false) {
							//当前扫码的是有桩车二维码
							if (response.data.msg.indexOf('字符串的长度不能为零') == 0) {
								uni.showToast({
									title: '请扫有桩的二维码',
									icon: 'none'
								})
							} else if (response.data.msg == '您有未完成或者未支付的订单') {
								that.myShowModal('有未完成订单，是否前往支付', './Payment')
							} else {
								uni.showToast({
									title: response.data.msg,
									icon: 'none'
								})
							}
						}
					},
					fail(response) {
						uni.hideLoading()
						console.log('无桩请求返回错误结果', response)
					}
				})
			}
		},
		//-------------------------------点击标记点规划线路-------------------------------
		markertap: function(e) {
			var that = this;
			//当前位置的经纬度
			var currentlocation = that.currentLongitude + ',' + that.currentLatitude
			for (let i = 0; i < that.markLonLatArray.length; i++) {
				//检索站点ID
				if (e.detail.markerId == that.markLonLatArray[i].stationID) {
					var markLocation = _self.markLonLatArray[i].lon + ',' + _self.markLonLatArray[i].lat
					uni.request({
						url: $DDTInterface.DDTInterface.getPlanningWalkLineByLonLat.Url,
						method: $DDTInterface.DDTInterface.getPlanningWalkLineByLonLat.method,
						data: {
							startLonLat: currentlocation,
							endLonLat: markLocation
						},
						success(res) {
							console.log('获取规划线路成功', res)
						},
						fail(res) {
							console.log('获取规划线路失败', res)
						}
					})
				}
			}
		}
	}
</script>

<style>
	.content {
		width: 750rpx;
		background-color: #FFFFFF;
	}

	.map {
		width: 750rpx;
	}

	/* 自定义导航栏 */
	.navgator {
		position: fixed;
		flex-direction: row;
		justify-content: space-between;
		/* align-items: center; */
		/* height: 168rpx; */
		background-color: #FFFFFF;
		top: 0;
		padding-top: 110rpx;
		left: 0;
		right: 0;
		padding-bottom: 20rpx;
	}

	.Btn_click {
		color: #65C36D;
	}

	.navTitleView {
		flex-direction: row;

	}

	/* 搜索框 */
	.topSerchView {
		position: fixed;
		left: 0;
		right: 0;
		top: 200rpx;
	}

	.SearchBar {
		background-color: #FFFFFF;
		margin-right: 20rpx;
		margin-left: 20rpx;
		flex-direction: row;
		border-radius: 9px;
		align-items: center;
		justify-content: space-between;
	}

	/* 地址搜索输入 */
	.addressInput {
		width: 335rpx;
		margin-left: 20rpx;
		height: 100rpx;
		color: #999999;
		font-size: 30rpx;
		font-weight: 300;
	}

	/* 站点列表 */
	.stationList {
		width: 710rpx;
		/* height: 100rpx; */
		background-color: #FFFFFF;
		line-height: 100rpx;
		font-size: 28rpx;
		margin-left: 20rpx;
		margin-top: 20rpx;
		border-radius: 10rpx;
	}

	.listItem {
		margin-top: 20rpx;
		margin-left: 20rpx;
		border-bottom-width: 0.5rpx;
		border-color: #eeeeee;
	}

	.bottomView {
		background-color: #FFFFFF;
		/* opacity: 0; */
		position: fixed;
		flex-direction: row;
		bottom: 20rpx;
		left: 0rpx;
		right: 0rpx;
		width: 100%; //如果视图发生位移就改这里
	}

	.dingwei {
		position: fixed;
		bottom: 20rpx;
		width: 120rpx;
		height: 120rpx;
		left: 20rpx;
	}

	.unLock {
		position: fixed;
		flex-direction: row;
		background-color: #65C36D;
		height: 100rpx;
		width: 440rpx;
		border-radius: 60rpx;
		margin-left: 160rpx;
		align-items: center;
		font-size: 42rpx;
		bottom: 30rpx;
	}

	.unLockView {
		/* position: fixed; */
		flex-direction: row;
		height: 100rpx;
		width: 440rpx;
		align-items: center;
		border-radius: 60rpx;
	}

	.scan {
		width: 50rpx;
		height: 50rpx;
		margin-left: 100rpx;
	}

	.personal {
		position: fixed;
		bottom: 19rpx;
		width: 120rpx;
		height: 120rpx;
		right: 20rpx;
	}

	.icon-img {
		width: 36px;
		height: 36px;
		position: fixed;
		left: 375rpx;
		transform: translate(-50%, -50%);
	}
	/* 计费规则 */
	.rule {
		width: 85rpx;
		height: 85rpx;
		border-radius: 50px;
		position: fixed;
		bottom: 150rpx;
		background-color: #FFF;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		left: 35rpx;
	}
	/* 故障上报、计费规则、公交的字体 */
	.circleText{
		font-size: 26rpx;
		font-weight: 300;
		color: #3BB985;
	}
	/* 公交 */
	.busClass {
		width: 85rpx;
		height: 85rpx;
		border-radius: 50px;
		position: fixed;
		bottom: 150rpx;
		background-color: #FFF;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		right: 40rpx;
	}
</style>
