<template>
	<view class="content">
		<map id="map" ref='map' class="map" :style="{height:mapHeight}" :latitude="centerLatitude" :longitude="centerLongitude"
		 :markers="markers" :show-location="showLocation" :scale="scale" :polyline="polyline" :controls="controls" @regionchange='mapChange'>
		 <cover-image src="../../../static/Home/icon_position.png" class="icon-img" :style="{bottom:Height}"></cover-image>
		</map>
		<!-- 自定义导航栏 -->
		<view class="navgator">
			<view style="width: 40rpx;height: 35rpx;margin-left: 40rpx;" @click="NavBack">
				<image src="../../static/GRZY/back.png" style="width: 20rpx;height: 35rpx;"></image>
			</view>
			
			<view class="navTitleView">
				<view>
					<text style="color: #333333;" @click="titleClick('有桩')" :class="{'Btn_click' : isClick == '有桩'}">有桩</text>
				</view>
				<view style="margin-left: 30rpx;">
					<text style="color: #65C36D;" @click="titleClick('无桩')" :class="{'Btn_click' : isClick == '无桩'}">无桩</text>
				</view>
			</view>

			<view style="width: 60rpx;">

			</view>
		</view>
		<!-- 回到自身定位按钮 -->
		<image src="../../static/GRZY/Position.png" class="dingwei" @click="backToMyLocation"></image>
		<!-- 扫码开锁按钮 -->
		<view class="unLock" @click="unLockClick">
			<image class="scan" src="../../static/GRZY/scan.png"></image>
			<view style="margin-left: 20rpx;">
				<text style="color: #FFFFFF;">扫码开锁</text>
			</view>
		</view>

		<image src="../../static/GRZY/personal.png" class="personal" @click="personalClick"></image>
	</view>
</template>

<script>
	import $DDTInterface from '@/common/DDT.js'
	export default {
		data() {
			return {
				mapHeight: '', //地图高度
				Height:'',
				centerLatitude: "24.517346", //地图中心点纬度
				centerLongitude: "117.6536981221", //地图中心点经度
				markers: [], //标记点坐标数组
				showLocation: true,
				scale: 15, //地图缩放比例,值越小地图可视范围越大
				polyline: [], //画线数组
				mapContext: '',
				isClick: '助力车', //是否点击
				markerIconPath:'../../static/GRZY/power.png',
				//标识宽高
				iconWidth:40,
				iconHeight:40,
				appMap:'',
				position:[],
			}
		},
		onLoad() {
			var that = this;
			//获取系统信息
			uni.getSystemInfo({
				success: function(res) {
					//地图高度
					that.mapHeight = res.windowHeight + 'px';
					that.Height=res.windowHeight/2 + 'px';
				}
			});
			// 获取自身位置
			// that.getMyLocation();
			that.GetStationByRange(117.6536981221,24.517346);
			that.GetBHTStationByRange();
		},
		onShow() {
			var that=this;
			setTimeout(function() {
				let query = uni.createSelectorQuery().in(that).select("#map");
				query.fields({
					size: true,
					scrollOffset: true
				}, data => {
						console.log(data);
				}).exec();
			}, 200)
		},
		onReady() {
			var that = this;
			//mapContext 通过 mapId 跟一个 <map> 组件绑定，通过它可以操作对应的 <map> 组件
			that.mapContext = uni.createMapContext("map", this);
			// that.mapContext.onstatuschanged = function(e){
			// 	console.log(e)
			// 	var res = JSON.parse(JSON.stringify(e));
			// 	if(!res.center.longitude || !res.center.latitude) {
			// 		console.log('获取中心坐标点为空')
			// 		return;
			// 	}
			// 	that.position = {
			// 		latitude: res.center.latitude,
			// 		longitude: res.center.longitude
			// 	}
			// 	console.log(that.position)
			// }
		},
		methods: {
			//-------------------------------获取自身位置-------------------------------
			getMyLocation: function() {
				var that = this;
				uni.getLocation({
					//type默认为wgs84返回gps坐标,gcj02返回国测局坐标,可用于uni.openLocation的坐标
					type: "gcj02",
					//是否解析地址信息，默认false
					geocode: true,
					success: function(res) {
						console.log(res)
						//如果地图中心位置坐标为空，将当前位置坐标设置为地图中心坐标
						that.centerLongitude = res.longitude;
						that.centerLatitude = res.latitude;
					}
				});
			},
			//-------------------------------获取地图中心坐标信息-------------------------------
			mapChange:function(e){
				var that = this;
				console.log(e)
				if (e.type == 'regionchange' || e.type == 'end') {
					that.mapContext = uni.createMapContext('map')
					that.mapContext.getCenterLocation({
						success: res => {
							console.log(res.latitude,res.longitude)
							//当地图移动的时候，改变坐标显示周围的车辆位置信息
							that.GetStationByRange(res.longitude,res.latitude)
						}
					})
				}
			},
			//-------------------------------有桩数据-------------------------------
			GetStationByRange:function(longitude,latitude){
				var that = this;
				uni.request({
					url:$DDTInterface.DDTInterface.GetStationByRange.Url,
					method:$DDTInterface.DDTInterface.GetStationByRange.method,
					data:{
						Longitude:longitude,//经度
						Latitude:latitude,//纬度
						Range:500,//范围（米）
					},
					success(res) {
						//请求数据成功之后先清空之前的数据
						that.markers = [];
						console.log('有桩数据',res)
						if(res.data.status == true){
							for (var i = 0; i < res.data.data.length; i++) {
								// let display = '';
								// if(res.data.data.status == 7){//正常
								// 	that.markerIconPath = '../../static/GRZY/power.png'
								// }else if(res.data.data.status == 9){//离线
								// 	that.markerIconPath = '../../static/GRZY/zixingche.png'
								// }
								//---------------------华丽的分割线，分割线中为绘制坐标点的方法---------------------------
								//创建绘制坐标点的对象marker
								var marker = new Object();
								//坐标里面包含经纬度，需要将经纬度分离取出来
								var gps = res.data.data[i].gps.split(',');
								//冒泡显示文本 ---  可租数量，可还数量，可用时长
								var content = '可租数量：' + res.data.data[i].rentCount + ' ' + '可还数量：' + res.data.data[i].restoreCount;
								marker = {
									id : res.data.data[i].id,
									latitude : gps[1],
									longitude : gps[0],
								    iconPath : that.markerIconPath,//标识显示的图片
									width : that.iconWidth,
									height : that.iconHeight,
									callout : {
										content: content, //文本res.data.data[i].name
										color: '#FC4646', //文字颜色
										fontSize: 12, //文本大小
										borderRadius: 4, //边框圆角
										bgColor: '#FFFFFF', //背景颜色
										display: 'BYCLICK', //'BYCLICK':点击显示; 'ALWAYS':常显
										padding:3,
									}
								}
								var json = JSON.stringify(that.markers);
								var arr = JSON.parse(json);
								arr.push(marker);
								that.markers = arr;
								//将坐标集合添加到绘制坐标数组中
								// that.markers.push(marker);
								//---------------------华丽的分割线--------------------------------------
							}
						}
					},
					fail(res) {
						console.log(res)
					}
				})
			},
			//-------------------------------无桩数据-------------------------------
			GetBHTStationByRange:function(){
				uni.request({
					url:$DDTInterface.DDTInterface.GetBHTStationByRange.Url,
					method:$DDTInterface.DDTInterface.GetBHTStationByRange.method,
					data:{
						Longitude:117.6536981221,//经度
						Latitude:24.517346,//纬度
						Range:1000,//范围（米）
					},
					success(res) {
						console.log('无桩数据',res)
					},
					fail(res) {
						console.log(res)
					}
				})
			},
			//-------------------------------返回上一个页面-------------------------------
			NavBack: function() {
				uni.navigateBack();
			},
			titleClick: function(res) {
				var that = this;
				that.isClick = res;
				if(res == '有桩'){
					//当前选中的是单车，加载单车的数据,经纬度传当前位置
					// that.GetStationByRange(that.centerLongitude,that.centerLatitude);
					
				}else if(res == '无桩') {
					//当前选中的是助力车，加载助力车的数据,经纬度传当前位置
					// that.GetBHTStationByRange(that.centerLongitude,that.centerLatitude);
				}
			},
			//-------------------------------返回自身位置-------------------------------
			backToMyLocation: function() {
				var that = this;
				//回到我的位置：将地图中心移动到当前定位点，需要配合map组件的show-location使用
				that.mapContext.moveToLocation();
			},
			//-------------------------------跳转个人中心-------------------------------
			personalClick:function(){
				uni.navigateTo({
					url: "../GRZY/zy_homepage"
				})
			},
			//-------------------------------扫码开锁-------------------------------
			unLockClick: function() {
				let that = this;
				//扫描二维码
				// uni.scanCode({
				// 	onlyFromCamera: true,
				// 	success: function(res) {
				// 		console.log('扫描结果',res)
				// 	},
				// 	fail:function(){
						
				// 	}
				// });
				uni.requestPayment({
					provider: 'wxpay',
					orderInfo: {
						appid: 'wx4394e02214803063',
						timestamp: '1591185789',
						noncestr: 'xaa2yfpoy1imam07anohs5arfwsrh130',
						package: 'Sign=WXPay',
						sign: '8A69553C5D0268F0D40809D13CC352F7',
						partnerid: '1324016301',
						prepayid: 'wx032003092832798201a7d3b71926726700',
					},
					success: function(res) {
						// uni.showModal({
						// 	title: '提示',
						// 	content: res,
						// 	showCancel: false
						// })
						console.log(res)
						
						if (res.errMsg == 'requestPayment:ok') { //成功
							uni.showToast({
								title: '支付成功',
							})
							that.getTicketPaymentInfo_ticketIssue(that.orderNum);
						} else if (res.errMsg == 'requestPayment:fail errors') { //错误
							uni.showToast({
								title: '支付失败，请重新支付',
								icon: 'none'
							})
						} else if (res.errMsg == 'requestPayment:fail canceled') { //用户取消
							uni.showToast({
								title: '您取消了支付',
								icon: 'none'
							})
						}
					},
				
					fail: function(ee) {
						console.log(ee)
						uni.showToast({
							title: '拉起支付失败，请检查网络后重试',
							icon: 'none',
							duration: 3000
						})
					}
				})
			}
		},
	}
</script>

<style>
	.content {
		width: 750rpx;
		background-color: #FFFFFF;
	}
	.map {
		width: 750rpx;
	}
	.navgator {
		position: fixed;
		flex-direction: row;
		justify-content: space-between;
		/* align-items: center; */
		/* height: 168rpx; */
		background-color: #FFFFFF;
		top: 0;
		padding-top: 100rpx;
		left: 0;
		right: 0;
		padding-bottom: 30rpx;
	}
	.Btn_click {
		color: #65C36D;
	}
	.navTitleView {
		flex-direction: row;

	}
	.bottomView {
		background-color: #FFFFFF;
		/* opacity: 0; */
		position: fixed;
		flex-direction: row;
		bottom: 20rpx;
		left: 0rpx;
		right: 0rpx;
		width: 100%; //如果视图发生位移就改这里
	}
	.dingwei {
		position: fixed;
		bottom: 20rpx;
		width: 120rpx;
		height: 120rpx;
		left: 20rpx;
	}
	.unLock {
		position: fixed;
		flex-direction: row;
		background-color: #65C36D;
		height: 100rpx;
		width: 440rpx;
		border-radius: 60rpx;
		margin-left: 160rpx;
		align-items: center;
		font-size: 42rpx;
		bottom: 30rpx;
	}
	.scan {
		width: 50rpx;
		height: 50rpx;
		margin-left: 100rpx;
	}

	.personal {
		position: fixed;
		bottom: 19rpx;
		width: 120rpx;
		height: 120rpx;
		right: 20rpx;
	}
	.icon-img {
		width: 36px;
		height: 36px;
		position: fixed;
		left: 375rpx;
		transform: translate(-50%, -50%);
	}
</style>
